spring.application.name=order-management
server.port=8181

#logging.level.org.hibernate=DEBUG
#logging.level.org.springframework=DEBUG

spring.datasource.url=${POSTGRES_URL}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:}
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.maximum-pool-size=15
spring.transaction.rollback-on-commit-failure=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false

spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092,localhost:9093}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.properties.isolation.level=read_committed
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092,localhost:9093}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.properties.enable.idempotence=true

kafka.orders.topic=${KAFKA_ORDER_TOPIC_NAME:orders.topic}
kafka.orders.topic-dlt=${KAFKA_ORDER_DLT_TOPIC_NAME:orders.topic.dlt}
kafka.orders.success.topic=${KAFKA_SUCCESSFUL_ORDER_TOPIC_NAME:orders.success.topic}
kafka.orders.failed.topic=${KAFKA_FAILED_ORDER_TOPIC_NAME:orders.failed.topic}